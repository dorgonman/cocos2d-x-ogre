# Makefile.in generated by automake 1.9.5 from Makefile.am.
# RenderSystems/GL/src/win32/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



SOURCES = $(libsupport_la_SOURCES)

srcdir = .
top_srcdir = ../../../..

pkgdatadir = $(datadir)/OGRE
pkglibdir = $(libdir)/OGRE
pkgincludedir = $(includedir)/OGRE
top_builddir = ../../../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
subdir = RenderSystems/GL/src/win32
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/Scripts/m4/cppunit.m4 \
	$(top_srcdir)/acinclude.m4 $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/OgreMain/include/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libsupport_la_LIBADD =
am_libsupport_la_OBJECTS = OgreWin32GLSupport.lo \
	OgreWin32RenderTexture.lo OgreWin32Window.lo \
	OgreWin32Context.lo
libsupport_la_OBJECTS = $(am_libsupport_la_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/OgreMain/include
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libsupport_la_SOURCES)
DIST_SOURCES = $(libsupport_la_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/tpf/opensource/libogre-dev/examples/ogre/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/tpf/opensource/libogre-dev/examples/ogre/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/tpf/opensource/libogre-dev/examples/ogre/missing --run autoconf
AUTOHEADER = ${SHELL} /home/tpf/opensource/libogre-dev/examples/ogre/missing --run autoheader
AUTOMAKE = ${SHELL} /home/tpf/opensource/libogre-dev/examples/ogre/missing --run automake-1.9
AWK = mawk
BUILD_CGPLUGIN_FALSE = #
BUILD_CGPLUGIN_TRUE = 
BUILD_DX9RENDERSYSTEM_FALSE = 
BUILD_DX9RENDERSYSTEM_TRUE = #
BUILD_EXRPLUGIN_FALSE = 
BUILD_EXRPLUGIN_TRUE = #
BUILD_UNIT_TESTS_FALSE = 
BUILD_UNIT_TESTS_TRUE = #
CC = gcc
CCDEPMODE = depmode=gcc3
CEGUI_CFLAGS = 
CEGUI_LIBS = 
CFLAGS = -g -O2
CFLAGS_VISIBILITY = -fvisibility=hidden -fvisibility-inlines-hidden -DOGRE_GCC_VISIBILITY
CPP = gcc -E
CPPFLAGS = 
CPPUNIT_CFLAGS = 
CPPUNIT_CONFIG = no
CPPUNIT_LIBS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -fPIC
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
F77 = 
FFLAGS = 
FT2_CFLAGS = -I/usr/include/freetype2
FT2_CONFIG = /usr/bin/freetype-config
FT2_LIBS = -L/usr/lib/x86_64-linux-gnu -lfreetype -lz
GLSUPPORT_CFLAGS = 
GLSUPPORT_LIBS = -lX11 -lXext -lGL -lXrandr -lXxf86vm
GL_LIBS = -lGL -lGLU
GTK_CFLAGS = 
GTK_LIBS = 
HAVE_CEGUI_FALSE = 
HAVE_CEGUI_TRUE = #
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LEX = flex
LEXLIB = -lfl
LEX_OUTPUT_ROOT = lex.yy
LIBOBJS = 
LIBS = -lCg -lfreeimage -lpthread -lz -lm -ldl 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/tpf/opensource/libogre-dev/examples/ogre/missing --run makeinfo
OBJEXT = o
OGRE_BUILDING_DEMOS_FALSE = #
OGRE_BUILDING_DEMOS_TRUE = 
OGRE_BUILD_SSE_FALSE = #
OGRE_BUILD_SSE_TRUE = 
OGRE_CFLAGS =  -DOGRE_GUI_GLX -DOGRE_CONFIG_LITTLE_ENDIAN
OGRE_GLSUPPORT = GLX
OGRE_GUI = GLX
OGRE_LINUX_FALSE = #
OGRE_LINUX_TRUE = 
OGRE_NT_FALSE = 
OGRE_NT_TRUE = #
OGRE_OSX_FALSE = 
OGRE_OSX_TRUE = #
OGRE_PLATFORM = GLX
OGRE_THREAD_LIBS = 
OIS_CFLAGS = -I/usr/include/OIS  
OIS_LIBS = -lOIS  
OPENEXR_CFLAGS = 
OPENEXR_LIBS = 
PACKAGE = OGRE
PACKAGE_BUGREPORT = 
PACKAGE_NAME = OGRE
PACKAGE_STRING = OGRE 1.4.9
PACKAGE_TARNAME = ogre
PACKAGE_VERSION = 1.4.9
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PLATFORM_CFLAGS =  -DOGRE_GUI_GLX
PLATFORM_LIBS = -lX11 -lXaw -lXt -lSM -lICE
PLUGIN_FLAGS = -shared -avoid-version
RANLIB = ranlib
RC = 
SAME_PLATFORM_AND_GUI_FALSE = #
SAME_PLATFORM_AND_GUI_TRUE = 
SET_MAKE = 
SHARED_FLAGS = -shared
SHELL = /bin/bash
STLPORT_CFLAGS = 
STLPORT_LIBS = 
STRIP = strip
USE_DEVIL_FALSE = 
USE_DEVIL_TRUE = #
USE_FREEIMAGE_FALSE = #
USE_FREEIMAGE_TRUE = 
VERSION = 1.4.9
YACC = bison -y
ZZIPLIB_CFLAGS =  
ZZIPLIB_LIBS = -Wl,-Bsymbolic-functions -lzzip -lz  
abs_top_builddir = /home/tpf/opensource/libogre-dev/examples/ogre/RenderSystems/GL/src/win32/../../../../.
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
ac_ct_RANLIB = ranlib
ac_ct_RC = 
ac_ct_STRIP = strip
ac_pt_PKG_CONFIG = /usr/bin/pkg-config
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/tpf/opensource/libogre-dev/examples/ogre/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p --
ogreexecdir = ${abs_top_builddir}/Samples/Common/bin
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
INCLUDES = $(STLPORT_CFLAGS) -I$(top_srcdir)/RenderSystems/GL/include \
           -I$(top_srcdir)/OgreMain/include $(GLSUPPORT_CFLAGS) \
           -I$(top_srcdir)/PlatformManagers/$(OGRE_PLATFORM)/include \
           $(CFLAGS_VISIBILITY)

noinst_LTLIBRARIES = libsupport.la
libsupport_la_SOURCES = ../OgreWin32GLSupport.cpp \
		../OgreWin32RenderTexture.cpp \
		../OgreWin32Window.cpp \
		OgreWin32Context.cpp

libsupport_la_LDFLAGS = 
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  RenderSystems/GL/src/win32/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  RenderSystems/GL/src/win32/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libsupport.la: $(libsupport_la_OBJECTS) $(libsupport_la_DEPENDENCIES) 
	$(CXXLINK)  $(libsupport_la_LDFLAGS) $(libsupport_la_OBJECTS) $(libsupport_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/OgreWin32Context.Plo
include ./$(DEPDIR)/OgreWin32GLSupport.Plo
include ./$(DEPDIR)/OgreWin32RenderTexture.Plo
include ./$(DEPDIR)/OgreWin32Window.Plo

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

OgreWin32GLSupport.lo: ../OgreWin32GLSupport.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT OgreWin32GLSupport.lo -MD -MP -MF "$(DEPDIR)/OgreWin32GLSupport.Tpo" -c -o OgreWin32GLSupport.lo `test -f '../OgreWin32GLSupport.cpp' || echo '$(srcdir)/'`../OgreWin32GLSupport.cpp; \
	then mv -f "$(DEPDIR)/OgreWin32GLSupport.Tpo" "$(DEPDIR)/OgreWin32GLSupport.Plo"; else rm -f "$(DEPDIR)/OgreWin32GLSupport.Tpo"; exit 1; fi
#	source='../OgreWin32GLSupport.cpp' object='OgreWin32GLSupport.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OgreWin32GLSupport.lo `test -f '../OgreWin32GLSupport.cpp' || echo '$(srcdir)/'`../OgreWin32GLSupport.cpp

OgreWin32RenderTexture.lo: ../OgreWin32RenderTexture.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT OgreWin32RenderTexture.lo -MD -MP -MF "$(DEPDIR)/OgreWin32RenderTexture.Tpo" -c -o OgreWin32RenderTexture.lo `test -f '../OgreWin32RenderTexture.cpp' || echo '$(srcdir)/'`../OgreWin32RenderTexture.cpp; \
	then mv -f "$(DEPDIR)/OgreWin32RenderTexture.Tpo" "$(DEPDIR)/OgreWin32RenderTexture.Plo"; else rm -f "$(DEPDIR)/OgreWin32RenderTexture.Tpo"; exit 1; fi
#	source='../OgreWin32RenderTexture.cpp' object='OgreWin32RenderTexture.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OgreWin32RenderTexture.lo `test -f '../OgreWin32RenderTexture.cpp' || echo '$(srcdir)/'`../OgreWin32RenderTexture.cpp

OgreWin32Window.lo: ../OgreWin32Window.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT OgreWin32Window.lo -MD -MP -MF "$(DEPDIR)/OgreWin32Window.Tpo" -c -o OgreWin32Window.lo `test -f '../OgreWin32Window.cpp' || echo '$(srcdir)/'`../OgreWin32Window.cpp; \
	then mv -f "$(DEPDIR)/OgreWin32Window.Tpo" "$(DEPDIR)/OgreWin32Window.Plo"; else rm -f "$(DEPDIR)/OgreWin32Window.Tpo"; exit 1; fi
#	source='../OgreWin32Window.cpp' object='OgreWin32Window.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OgreWin32Window.lo `test -f '../OgreWin32Window.cpp' || echo '$(srcdir)/'`../OgreWin32Window.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
